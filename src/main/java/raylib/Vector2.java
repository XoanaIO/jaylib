/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package raylib;

public class Vector2 {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Vector2(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Vector2 obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RaylibJNI.delete_Vector2(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setX(float value) {
    RaylibJNI.Vector2_x_set(swigCPtr, this, value);
  }

  public float getX() {
    return RaylibJNI.Vector2_x_get(swigCPtr, this);
  }

  public void setY(float value) {
    RaylibJNI.Vector2_y_set(swigCPtr, this, value);
  }

  public float getY() {
    return RaylibJNI.Vector2_y_get(swigCPtr, this);
  }

  public Vector2() {
    this(RaylibJNI.new_Vector2(), true);
  }

  public Vector2(float x, float y) {
    this();
    this.setX(x);
    this.setY(y);
  }

  public void add_i(Vector2 other) {
    this.setX(this.getX()+other.getX());
    this.setY(this.getY()+other.getY());
  }

  public void add_i(float other) {
    this.setX(this.getX()+other);
    this.setY(this.getY()+other);
  }

  public void multiply_i(Vector2 other) {
    this.setX(this.getX()*other.getX());
    this.setY(this.getY()*other.getY());
  }

  public void multiply_i(float other) {
    this.setX(this.getX()*other);
    this.setY(this.getY()*other);
  }

  public void subtract_i(Vector2 other) {
    this.setX(this.getX()-other.getX());
    this.setY(this.getY()-other.getY());
  }

  public void subtract_i(float other) {
    this.setX(this.getX()-other);
    this.setY(this.getY()-other);
  }

  public Vector2 add(Vector2 other) {
    return new Vector2(this.getX()+other.getX(), this.getY()+other.getY());
  }

  public Vector2 add(float other) {
    return new Vector2(this.getX()+other, this.getY()+other);
  }

  public Vector2 multiply(Vector2 other) {
    return new Vector2(this.getX()*other.getX(), this.getY()*other.getY());
  }

  public Vector2 multiply(float other) {
    return new Vector2(this.getX()*other, this.getY()*other);
  }

  public Vector2 subtract(Vector2 other) {
    return new Vector2(this.getX()-other.getX(), this.getY()-other.getY());
  }

  public Vector2 subtract(float other) {
    return new Vector2(this.getX()-other, this.getY()-other);
  }
}
